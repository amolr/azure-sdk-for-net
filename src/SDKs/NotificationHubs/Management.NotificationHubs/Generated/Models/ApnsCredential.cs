// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.NotificationHubs.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Description of a NotificationHub ApnsCredential.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ApnsCredential
    {
        /// <summary>
        /// Initializes a new instance of the ApnsCredential class.
        /// </summary>
        public ApnsCredential()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApnsCredential class.
        /// </summary>
        /// <param name="apnsCertificate">The APNS certificate.</param>
        /// <param name="certificateKey">The certificate key.</param>
        /// <param name="endpoint">The endpoint of this credential.</param>
        /// <param name="thumbprint">The Apns certificate Thumbprint</param>
        /// <param name="keyId">A 10-character key identifier (kid) key,
        /// obtained from your developer account</param>
        /// <param name="bundleId">Id that uniquely identifies an Application
        /// Bundle on a device or simulator</param>
        /// <param name="teamId">A unique 10 character string generated by
        /// Apple thats assigned to your team</param>
        /// <param name="token">Provider Authentication Token, obtained through
        /// your developer account</param>
        public ApnsCredential(string apnsCertificate = default(string), string certificateKey = default(string), string endpoint = default(string), string thumbprint = default(string), string keyId = default(string), string bundleId = default(string), string teamId = default(string), string token = default(string))
        {
            ApnsCertificate = apnsCertificate;
            CertificateKey = certificateKey;
            Endpoint = endpoint;
            Thumbprint = thumbprint;
            KeyId = keyId;
            BundleId = bundleId;
            TeamId = teamId;
            Token = token;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the APNS certificate.
        /// </summary>
        [JsonProperty(PropertyName = "properties.apnsCertificate")]
        public string ApnsCertificate { get; set; }

        /// <summary>
        /// Gets or sets the certificate key.
        /// </summary>
        [JsonProperty(PropertyName = "properties.certificateKey")]
        public string CertificateKey { get; set; }

        /// <summary>
        /// Gets or sets the endpoint of this credential.
        /// </summary>
        [JsonProperty(PropertyName = "properties.endpoint")]
        public string Endpoint { get; set; }

        /// <summary>
        /// Gets or sets the Apns certificate Thumbprint
        /// </summary>
        [JsonProperty(PropertyName = "properties.thumbprint")]
        public string Thumbprint { get; set; }

        /// <summary>
        /// Gets or sets a 10-character key identifier (kid) key, obtained from
        /// your developer account
        /// </summary>
        [JsonProperty(PropertyName = "properties.keyId")]
        public string KeyId { get; set; }

        /// <summary>
        /// Gets or sets id that uniquely identifies an Application Bundle on a
        /// device or simulator
        /// </summary>
        [JsonProperty(PropertyName = "properties.bundleId")]
        public string BundleId { get; set; }

        /// <summary>
        /// Gets or sets a unique 10 character string generated by Apple thats
        /// assigned to your team
        /// </summary>
        [JsonProperty(PropertyName = "properties.teamId")]
        public string TeamId { get; set; }

        /// <summary>
        /// Gets or sets provider Authentication Token, obtained through your
        /// developer account
        /// </summary>
        [JsonProperty(PropertyName = "properties.token")]
        public string Token { get; set; }

    }
}
